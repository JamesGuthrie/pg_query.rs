use crate::*;

#[derive(Debug)]
pub enum NodeMut<'a> {
    Alias(&'a mut protobuf::Alias),
    RangeVar(&'a mut protobuf::RangeVar),
    TableFunc(&'a mut protobuf::TableFunc),
    Expr(&'a mut protobuf::Expr),
    Var(&'a mut protobuf::Var),
    Param(&'a mut protobuf::Param),
    Aggref(&'a mut protobuf::Aggref),
    GroupingFunc(&'a mut protobuf::GroupingFunc),
    WindowFunc(&'a mut protobuf::WindowFunc),
    SubscriptingRef(&'a mut protobuf::SubscriptingRef),
    FuncExpr(&'a mut protobuf::FuncExpr),
    NamedArgExpr(&'a mut protobuf::NamedArgExpr),
    OpExpr(&'a mut protobuf::OpExpr),
    DistinctExpr(&'a mut protobuf::DistinctExpr),
    NullIfExpr(&'a mut protobuf::NullIfExpr),
    ScalarArrayOpExpr(&'a mut protobuf::ScalarArrayOpExpr),
    BoolExpr(&'a mut protobuf::BoolExpr),
    SubLink(&'a mut protobuf::SubLink),
    SubPlan(&'a mut protobuf::SubPlan),
    AlternativeSubPlan(&'a mut protobuf::AlternativeSubPlan),
    FieldSelect(&'a mut protobuf::FieldSelect),
    FieldStore(&'a mut protobuf::FieldStore),
    RelabelType(&'a mut protobuf::RelabelType),
    CoerceViaIo(&'a mut protobuf::CoerceViaIo),
    ArrayCoerceExpr(&'a mut protobuf::ArrayCoerceExpr),
    ConvertRowtypeExpr(&'a mut protobuf::ConvertRowtypeExpr),
    CollateExpr(&'a mut protobuf::CollateExpr),
    CaseExpr(&'a mut protobuf::CaseExpr),
    CaseWhen(&'a mut protobuf::CaseWhen),
    CaseTestExpr(&'a mut protobuf::CaseTestExpr),
    ArrayExpr(&'a mut protobuf::ArrayExpr),
    RowExpr(&'a mut protobuf::RowExpr),
    RowCompareExpr(&'a mut protobuf::RowCompareExpr),
    CoalesceExpr(&'a mut protobuf::CoalesceExpr),
    MinMaxExpr(&'a mut protobuf::MinMaxExpr),
    SqlvalueFunction(&'a mut protobuf::SqlValueFunction),
    XmlExpr(&'a mut protobuf::XmlExpr),
    NullTest(&'a mut protobuf::NullTest),
    BooleanTest(&'a mut protobuf::BooleanTest),
    CoerceToDomain(&'a mut protobuf::CoerceToDomain),
    CoerceToDomainValue(&'a mut protobuf::CoerceToDomainValue),
    SetToDefault(&'a mut protobuf::SetToDefault),
    CurrentOfExpr(&'a mut protobuf::CurrentOfExpr),
    NextValueExpr(&'a mut protobuf::NextValueExpr),
    InferenceElem(&'a mut protobuf::InferenceElem),
    TargetEntry(&'a mut protobuf::TargetEntry),
    RangeTblRef(&'a mut protobuf::RangeTblRef),
    JoinExpr(&'a mut protobuf::JoinExpr),
    FromExpr(&'a mut protobuf::FromExpr),
    OnConflictExpr(&'a mut protobuf::OnConflictExpr),
    IntoClause(&'a mut protobuf::IntoClause),
    RawStmt(&'a mut protobuf::RawStmt),
    Query(&'a mut protobuf::Query),
    InsertStmt(&'a mut protobuf::InsertStmt),
    DeleteStmt(&'a mut protobuf::DeleteStmt),
    UpdateStmt(&'a mut protobuf::UpdateStmt),
    SelectStmt(&'a mut protobuf::SelectStmt),
    AlterTableStmt(&'a mut protobuf::AlterTableStmt),
    AlterTableCmd(&'a mut protobuf::AlterTableCmd),
    AlterDomainStmt(&'a mut protobuf::AlterDomainStmt),
    SetOperationStmt(&'a mut protobuf::SetOperationStmt),
    GrantStmt(&'a mut protobuf::GrantStmt),
    GrantRoleStmt(&'a mut protobuf::GrantRoleStmt),
    AlterDefaultPrivilegesStmt(&'a mut protobuf::AlterDefaultPrivilegesStmt),
    ClosePortalStmt(&'a mut protobuf::ClosePortalStmt),
    ClusterStmt(&'a mut protobuf::ClusterStmt),
    CopyStmt(&'a mut protobuf::CopyStmt),
    CreateStmt(&'a mut protobuf::CreateStmt),
    DefineStmt(&'a mut protobuf::DefineStmt),
    DropStmt(&'a mut protobuf::DropStmt),
    TruncateStmt(&'a mut protobuf::TruncateStmt),
    CommentStmt(&'a mut protobuf::CommentStmt),
    FetchStmt(&'a mut protobuf::FetchStmt),
    IndexStmt(&'a mut protobuf::IndexStmt),
    CreateFunctionStmt(&'a mut protobuf::CreateFunctionStmt),
    AlterFunctionStmt(&'a mut protobuf::AlterFunctionStmt),
    DoStmt(&'a mut protobuf::DoStmt),
    RenameStmt(&'a mut protobuf::RenameStmt),
    RuleStmt(&'a mut protobuf::RuleStmt),
    NotifyStmt(&'a mut protobuf::NotifyStmt),
    ListenStmt(&'a mut protobuf::ListenStmt),
    UnlistenStmt(&'a mut protobuf::UnlistenStmt),
    TransactionStmt(&'a mut protobuf::TransactionStmt),
    ViewStmt(&'a mut protobuf::ViewStmt),
    LoadStmt(&'a mut protobuf::LoadStmt),
    CreateDomainStmt(&'a mut protobuf::CreateDomainStmt),
    CreatedbStmt(&'a mut protobuf::CreatedbStmt),
    DropdbStmt(&'a mut protobuf::DropdbStmt),
    VacuumStmt(&'a mut protobuf::VacuumStmt),
    ExplainStmt(&'a mut protobuf::ExplainStmt),
    CreateTableAsStmt(&'a mut protobuf::CreateTableAsStmt),
    CreateSeqStmt(&'a mut protobuf::CreateSeqStmt),
    AlterSeqStmt(&'a mut protobuf::AlterSeqStmt),
    VariableSetStmt(&'a mut protobuf::VariableSetStmt),
    VariableShowStmt(&'a mut protobuf::VariableShowStmt),
    DiscardStmt(&'a mut protobuf::DiscardStmt),
    CreateTrigStmt(&'a mut protobuf::CreateTrigStmt),
    CreatePlangStmt(&'a mut protobuf::CreatePLangStmt),
    CreateRoleStmt(&'a mut protobuf::CreateRoleStmt),
    AlterRoleStmt(&'a mut protobuf::AlterRoleStmt),
    DropRoleStmt(&'a mut protobuf::DropRoleStmt),
    LockStmt(&'a mut protobuf::LockStmt),
    ConstraintsSetStmt(&'a mut protobuf::ConstraintsSetStmt),
    ReindexStmt(&'a mut protobuf::ReindexStmt),
    CheckPointStmt(&'a mut protobuf::CheckPointStmt),
    CreateSchemaStmt(&'a mut protobuf::CreateSchemaStmt),
    AlterDatabaseStmt(&'a mut protobuf::AlterDatabaseStmt),
    AlterDatabaseSetStmt(&'a mut protobuf::AlterDatabaseSetStmt),
    AlterRoleSetStmt(&'a mut protobuf::AlterRoleSetStmt),
    CreateConversionStmt(&'a mut protobuf::CreateConversionStmt),
    CreateCastStmt(&'a mut protobuf::CreateCastStmt),
    CreateOpClassStmt(&'a mut protobuf::CreateOpClassStmt),
    CreateOpFamilyStmt(&'a mut protobuf::CreateOpFamilyStmt),
    AlterOpFamilyStmt(&'a mut protobuf::AlterOpFamilyStmt),
    PrepareStmt(&'a mut protobuf::PrepareStmt),
    ExecuteStmt(&'a mut protobuf::ExecuteStmt),
    DeallocateStmt(&'a mut protobuf::DeallocateStmt),
    DeclareCursorStmt(&'a mut protobuf::DeclareCursorStmt),
    CreateTableSpaceStmt(&'a mut protobuf::CreateTableSpaceStmt),
    DropTableSpaceStmt(&'a mut protobuf::DropTableSpaceStmt),
    AlterObjectDependsStmt(&'a mut protobuf::AlterObjectDependsStmt),
    AlterObjectSchemaStmt(&'a mut protobuf::AlterObjectSchemaStmt),
    AlterOwnerStmt(&'a mut protobuf::AlterOwnerStmt),
    AlterOperatorStmt(&'a mut protobuf::AlterOperatorStmt),
    AlterTypeStmt(&'a mut protobuf::AlterTypeStmt),
    DropOwnedStmt(&'a mut protobuf::DropOwnedStmt),
    ReassignOwnedStmt(&'a mut protobuf::ReassignOwnedStmt),
    CompositeTypeStmt(&'a mut protobuf::CompositeTypeStmt),
    CreateEnumStmt(&'a mut protobuf::CreateEnumStmt),
    CreateRangeStmt(&'a mut protobuf::CreateRangeStmt),
    AlterEnumStmt(&'a mut protobuf::AlterEnumStmt),
    AlterTsdictionaryStmt(&'a mut protobuf::AlterTsDictionaryStmt),
    AlterTsconfigurationStmt(&'a mut protobuf::AlterTsConfigurationStmt),
    CreateFdwStmt(&'a mut protobuf::CreateFdwStmt),
    AlterFdwStmt(&'a mut protobuf::AlterFdwStmt),
    CreateForeignServerStmt(&'a mut protobuf::CreateForeignServerStmt),
    AlterForeignServerStmt(&'a mut protobuf::AlterForeignServerStmt),
    CreateUserMappingStmt(&'a mut protobuf::CreateUserMappingStmt),
    AlterUserMappingStmt(&'a mut protobuf::AlterUserMappingStmt),
    DropUserMappingStmt(&'a mut protobuf::DropUserMappingStmt),
    AlterTableSpaceOptionsStmt(&'a mut protobuf::AlterTableSpaceOptionsStmt),
    AlterTableMoveAllStmt(&'a mut protobuf::AlterTableMoveAllStmt),
    SecLabelStmt(&'a mut protobuf::SecLabelStmt),
    CreateForeignTableStmt(&'a mut protobuf::CreateForeignTableStmt),
    ImportForeignSchemaStmt(&'a mut protobuf::ImportForeignSchemaStmt),
    CreateExtensionStmt(&'a mut protobuf::CreateExtensionStmt),
    AlterExtensionStmt(&'a mut protobuf::AlterExtensionStmt),
    AlterExtensionContentsStmt(&'a mut protobuf::AlterExtensionContentsStmt),
    CreateEventTrigStmt(&'a mut protobuf::CreateEventTrigStmt),
    AlterEventTrigStmt(&'a mut protobuf::AlterEventTrigStmt),
    RefreshMatViewStmt(&'a mut protobuf::RefreshMatViewStmt),
    ReplicaIdentityStmt(&'a mut protobuf::ReplicaIdentityStmt),
    AlterSystemStmt(&'a mut protobuf::AlterSystemStmt),
    CreatePolicyStmt(&'a mut protobuf::CreatePolicyStmt),
    AlterPolicyStmt(&'a mut protobuf::AlterPolicyStmt),
    CreateTransformStmt(&'a mut protobuf::CreateTransformStmt),
    CreateAmStmt(&'a mut protobuf::CreateAmStmt),
    CreatePublicationStmt(&'a mut protobuf::CreatePublicationStmt),
    AlterPublicationStmt(&'a mut protobuf::AlterPublicationStmt),
    CreateSubscriptionStmt(&'a mut protobuf::CreateSubscriptionStmt),
    AlterSubscriptionStmt(&'a mut protobuf::AlterSubscriptionStmt),
    DropSubscriptionStmt(&'a mut protobuf::DropSubscriptionStmt),
    CreateStatsStmt(&'a mut protobuf::CreateStatsStmt),
    AlterCollationStmt(&'a mut protobuf::AlterCollationStmt),
    CallStmt(&'a mut protobuf::CallStmt),
    AlterStatsStmt(&'a mut protobuf::AlterStatsStmt),
    AExpr(&'a mut protobuf::AExpr),
    ColumnRef(&'a mut protobuf::ColumnRef),
    ParamRef(&'a mut protobuf::ParamRef),
    AConst(&'a mut protobuf::AConst),
    FuncCall(&'a mut protobuf::FuncCall),
    AStar(&'a mut protobuf::AStar),
    AIndices(&'a mut protobuf::AIndices),
    AIndirection(&'a mut protobuf::AIndirection),
    AArrayExpr(&'a mut protobuf::AArrayExpr),
    ResTarget(&'a mut protobuf::ResTarget),
    MultiAssignRef(&'a mut protobuf::MultiAssignRef),
    TypeCast(&'a mut protobuf::TypeCast),
    CollateClause(&'a mut protobuf::CollateClause),
    SortBy(&'a mut protobuf::SortBy),
    WindowDef(&'a mut protobuf::WindowDef),
    RangeSubselect(&'a mut protobuf::RangeSubselect),
    RangeFunction(&'a mut protobuf::RangeFunction),
    RangeTableSample(&'a mut protobuf::RangeTableSample),
    RangeTableFunc(&'a mut protobuf::RangeTableFunc),
    RangeTableFuncCol(&'a mut protobuf::RangeTableFuncCol),
    TypeName(&'a mut protobuf::TypeName),
    ColumnDef(&'a mut protobuf::ColumnDef),
    IndexElem(&'a mut protobuf::IndexElem),
    Constraint(&'a mut protobuf::Constraint),
    DefElem(&'a mut protobuf::DefElem),
    RangeTblEntry(&'a mut protobuf::RangeTblEntry),
    RangeTblFunction(&'a mut protobuf::RangeTblFunction),
    TableSampleClause(&'a mut protobuf::TableSampleClause),
    WithCheckOption(&'a mut protobuf::WithCheckOption),
    SortGroupClause(&'a mut protobuf::SortGroupClause),
    GroupingSet(&'a mut protobuf::GroupingSet),
    WindowClause(&'a mut protobuf::WindowClause),
    ObjectWithArgs(&'a mut protobuf::ObjectWithArgs),
    AccessPriv(&'a mut protobuf::AccessPriv),
    CreateOpClassItem(&'a mut protobuf::CreateOpClassItem),
    TableLikeClause(&'a mut protobuf::TableLikeClause),
    FunctionParameter(&'a mut protobuf::FunctionParameter),
    LockingClause(&'a mut protobuf::LockingClause),
    RowMarkClause(&'a mut protobuf::RowMarkClause),
    XmlSerialize(&'a mut protobuf::XmlSerialize),
    WithClause(&'a mut protobuf::WithClause),
    InferClause(&'a mut protobuf::InferClause),
    OnConflictClause(&'a mut protobuf::OnConflictClause),
    CommonTableExpr(&'a mut protobuf::CommonTableExpr),
    RoleSpec(&'a mut protobuf::RoleSpec),
    TriggerTransition(&'a mut protobuf::TriggerTransition),
    PartitionElem(&'a mut protobuf::PartitionElem),
    PartitionSpec(&'a mut protobuf::PartitionSpec),
    PartitionBoundSpec(&'a mut protobuf::PartitionBoundSpec),
    PartitionRangeDatum(&'a mut protobuf::PartitionRangeDatum),
    PartitionCmd(&'a mut protobuf::PartitionCmd),
    VacuumRelation(&'a mut protobuf::VacuumRelation),
    InlineCodeBlock(&'a mut protobuf::InlineCodeBlock),
    CallContext(&'a mut protobuf::CallContext),
    Integer(&'a mut protobuf::Integer),
    Float(&'a mut protobuf::Float),
    String(&'a mut protobuf::String),
    BitString(&'a mut protobuf::BitString),
    Null(&'a mut protobuf::Null),
    List(&'a mut protobuf::List),
    IntList(&'a mut protobuf::IntList),
    OidList(&'a mut protobuf::OidList),
}

impl<'a> NodeMut<'a> {
    pub fn deparse(&self) -> Result<String> {
        crate::deparse(&protobuf::ParseResult {
            version: crate::bindings::PG_VERSION_NUM as i32,
            stmts: vec![
                protobuf::RawStmt {
                    stmt: Some(Box::new(Node { node: Some(self.to_enum()) })),
                    stmt_location: 0,
                    stmt_len: 0,
                }
            ]
        })
    }

    pub fn eq(&self, other: &NodeRef) -> bool {
        // dbg!(self, other);
        match (self, other) {
            (NodeMut::Alias(l), NodeRef::Alias(r)) => l == r,
            (NodeMut::RangeVar(l), NodeRef::RangeVar(r)) => l == r,
            (NodeMut::TableFunc(l), NodeRef::TableFunc(r)) => l == r,
            (NodeMut::Expr(l), NodeRef::Expr(r)) => l == r,
            (NodeMut::Var(l), NodeRef::Var(r)) => l == r,
            (NodeMut::Param(l), NodeRef::Param(r)) => l == r,
            (NodeMut::Aggref(l), NodeRef::Aggref(r)) => l == r,
            (NodeMut::GroupingFunc(l), NodeRef::GroupingFunc(r)) => l == r,
            (NodeMut::WindowFunc(l), NodeRef::WindowFunc(r)) => l == r,
            (NodeMut::SubscriptingRef(l), NodeRef::SubscriptingRef(r)) => l == r,
            (NodeMut::FuncExpr(l), NodeRef::FuncExpr(r)) => l == r,
            (NodeMut::NamedArgExpr(l), NodeRef::NamedArgExpr(r)) => l == r,
            (NodeMut::OpExpr(l), NodeRef::OpExpr(r)) => l == r,
            (NodeMut::DistinctExpr(l), NodeRef::DistinctExpr(r)) => l == r,
            (NodeMut::NullIfExpr(l), NodeRef::NullIfExpr(r)) => l == r,
            (NodeMut::ScalarArrayOpExpr(l), NodeRef::ScalarArrayOpExpr(r)) => l == r,
            (NodeMut::BoolExpr(l), NodeRef::BoolExpr(r)) => l == r,
            (NodeMut::SubLink(l), NodeRef::SubLink(r)) => l == r,
            (NodeMut::SubPlan(l), NodeRef::SubPlan(r)) => l == r,
            (NodeMut::AlternativeSubPlan(l), NodeRef::AlternativeSubPlan(r)) => l == r,
            (NodeMut::FieldSelect(l), NodeRef::FieldSelect(r)) => l == r,
            (NodeMut::FieldStore(l), NodeRef::FieldStore(r)) => l == r,
            (NodeMut::RelabelType(l), NodeRef::RelabelType(r)) => l == r,
            (NodeMut::CoerceViaIo(l), NodeRef::CoerceViaIo(r)) => l == r,
            (NodeMut::ArrayCoerceExpr(l), NodeRef::ArrayCoerceExpr(r)) => l == r,
            (NodeMut::ConvertRowtypeExpr(l), NodeRef::ConvertRowtypeExpr(r)) => l == r,
            (NodeMut::CollateExpr(l), NodeRef::CollateExpr(r)) => l == r,
            (NodeMut::CaseExpr(l), NodeRef::CaseExpr(r)) => l == r,
            (NodeMut::CaseWhen(l), NodeRef::CaseWhen(r)) => l == r,
            (NodeMut::CaseTestExpr(l), NodeRef::CaseTestExpr(r)) => l == r,
            (NodeMut::ArrayExpr(l), NodeRef::ArrayExpr(r)) => l == r,
            (NodeMut::RowExpr(l), NodeRef::RowExpr(r)) => l == r,
            (NodeMut::RowCompareExpr(l), NodeRef::RowCompareExpr(r)) => l == r,
            (NodeMut::CoalesceExpr(l), NodeRef::CoalesceExpr(r)) => l == r,
            (NodeMut::MinMaxExpr(l), NodeRef::MinMaxExpr(r)) => l == r,
            (NodeMut::SqlvalueFunction(l), NodeRef::SqlvalueFunction(r)) => l == r,
            (NodeMut::XmlExpr(l), NodeRef::XmlExpr(r)) => l == r,
            (NodeMut::NullTest(l), NodeRef::NullTest(r)) => l == r,
            (NodeMut::BooleanTest(l), NodeRef::BooleanTest(r)) => l == r,
            (NodeMut::CoerceToDomain(l), NodeRef::CoerceToDomain(r)) => l == r,
            (NodeMut::CoerceToDomainValue(l), NodeRef::CoerceToDomainValue(r)) => l == r,
            (NodeMut::SetToDefault(l), NodeRef::SetToDefault(r)) => l == r,
            (NodeMut::CurrentOfExpr(l), NodeRef::CurrentOfExpr(r)) => l == r,
            (NodeMut::NextValueExpr(l), NodeRef::NextValueExpr(r)) => l == r,
            (NodeMut::InferenceElem(l), NodeRef::InferenceElem(r)) => l == r,
            (NodeMut::TargetEntry(l), NodeRef::TargetEntry(r)) => l == r,
            (NodeMut::RangeTblRef(l), NodeRef::RangeTblRef(r)) => l == r,
            (NodeMut::JoinExpr(l), NodeRef::JoinExpr(r)) => l == r,
            (NodeMut::FromExpr(l), NodeRef::FromExpr(r)) => l == r,
            (NodeMut::OnConflictExpr(l), NodeRef::OnConflictExpr(r)) => l == r,
            (NodeMut::IntoClause(l), NodeRef::IntoClause(r)) => l == r,
            (NodeMut::RawStmt(l), NodeRef::RawStmt(r)) => l == r,
            (NodeMut::Query(l), NodeRef::Query(r)) => l == r,
            (NodeMut::InsertStmt(l), NodeRef::InsertStmt(r)) => l == r,
            (NodeMut::DeleteStmt(l), NodeRef::DeleteStmt(r)) => l == r,
            (NodeMut::UpdateStmt(l), NodeRef::UpdateStmt(r)) => l == r,
            (NodeMut::SelectStmt(l), NodeRef::SelectStmt(r)) => l == r,
            (NodeMut::AlterTableStmt(l), NodeRef::AlterTableStmt(r)) => l == r,
            (NodeMut::AlterTableCmd(l), NodeRef::AlterTableCmd(r)) => l == r,
            (NodeMut::AlterDomainStmt(l), NodeRef::AlterDomainStmt(r)) => l == r,
            (NodeMut::SetOperationStmt(l), NodeRef::SetOperationStmt(r)) => l == r,
            (NodeMut::GrantStmt(l), NodeRef::GrantStmt(r)) => l == r,
            (NodeMut::GrantRoleStmt(l), NodeRef::GrantRoleStmt(r)) => l == r,
            (NodeMut::AlterDefaultPrivilegesStmt(l), NodeRef::AlterDefaultPrivilegesStmt(r)) => l == r,
            (NodeMut::ClosePortalStmt(l), NodeRef::ClosePortalStmt(r)) => l == r,
            (NodeMut::ClusterStmt(l), NodeRef::ClusterStmt(r)) => l == r,
            (NodeMut::CopyStmt(l), NodeRef::CopyStmt(r)) => l == r,
            (NodeMut::CreateStmt(l), NodeRef::CreateStmt(r)) => l == r,
            (NodeMut::DefineStmt(l), NodeRef::DefineStmt(r)) => l == r,
            (NodeMut::DropStmt(l), NodeRef::DropStmt(r)) => l == r,
            (NodeMut::TruncateStmt(l), NodeRef::TruncateStmt(r)) => l == r,
            (NodeMut::CommentStmt(l), NodeRef::CommentStmt(r)) => l == r,
            (NodeMut::FetchStmt(l), NodeRef::FetchStmt(r)) => l == r,
            (NodeMut::IndexStmt(l), NodeRef::IndexStmt(r)) => l == r,
            (NodeMut::CreateFunctionStmt(l), NodeRef::CreateFunctionStmt(r)) => l == r,
            (NodeMut::AlterFunctionStmt(l), NodeRef::AlterFunctionStmt(r)) => l == r,
            (NodeMut::DoStmt(l), NodeRef::DoStmt(r)) => l == r,
            (NodeMut::RenameStmt(l), NodeRef::RenameStmt(r)) => l == r,
            (NodeMut::RuleStmt(l), NodeRef::RuleStmt(r)) => l == r,
            (NodeMut::NotifyStmt(l), NodeRef::NotifyStmt(r)) => l == r,
            (NodeMut::ListenStmt(l), NodeRef::ListenStmt(r)) => l == r,
            (NodeMut::UnlistenStmt(l), NodeRef::UnlistenStmt(r)) => l == r,
            (NodeMut::TransactionStmt(l), NodeRef::TransactionStmt(r)) => l == r,
            (NodeMut::ViewStmt(l), NodeRef::ViewStmt(r)) => l == r,
            (NodeMut::LoadStmt(l), NodeRef::LoadStmt(r)) => l == r,
            (NodeMut::CreateDomainStmt(l), NodeRef::CreateDomainStmt(r)) => l == r,
            (NodeMut::CreatedbStmt(l), NodeRef::CreatedbStmt(r)) => l == r,
            (NodeMut::DropdbStmt(l), NodeRef::DropdbStmt(r)) => l == r,
            (NodeMut::VacuumStmt(l), NodeRef::VacuumStmt(r)) => l == r,
            (NodeMut::ExplainStmt(l), NodeRef::ExplainStmt(r)) => l == r,
            (NodeMut::CreateTableAsStmt(l), NodeRef::CreateTableAsStmt(r)) => l == r,
            (NodeMut::CreateSeqStmt(l), NodeRef::CreateSeqStmt(r)) => l == r,
            (NodeMut::AlterSeqStmt(l), NodeRef::AlterSeqStmt(r)) => l == r,
            (NodeMut::VariableSetStmt(l), NodeRef::VariableSetStmt(r)) => l == r,
            (NodeMut::VariableShowStmt(l), NodeRef::VariableShowStmt(r)) => l == r,
            (NodeMut::DiscardStmt(l), NodeRef::DiscardStmt(r)) => l == r,
            (NodeMut::CreateTrigStmt(l), NodeRef::CreateTrigStmt(r)) => l == r,
            (NodeMut::CreatePlangStmt(l), NodeRef::CreatePlangStmt(r)) => l == r,
            (NodeMut::CreateRoleStmt(l), NodeRef::CreateRoleStmt(r)) => l == r,
            (NodeMut::AlterRoleStmt(l), NodeRef::AlterRoleStmt(r)) => l == r,
            (NodeMut::DropRoleStmt(l), NodeRef::DropRoleStmt(r)) => l == r,
            (NodeMut::LockStmt(l), NodeRef::LockStmt(r)) => l == r,
            (NodeMut::ConstraintsSetStmt(l), NodeRef::ConstraintsSetStmt(r)) => l == r,
            (NodeMut::ReindexStmt(l), NodeRef::ReindexStmt(r)) => l == r,
            (NodeMut::CheckPointStmt(l), NodeRef::CheckPointStmt(r)) => l == r,
            (NodeMut::CreateSchemaStmt(l), NodeRef::CreateSchemaStmt(r)) => l == r,
            (NodeMut::AlterDatabaseStmt(l), NodeRef::AlterDatabaseStmt(r)) => l == r,
            (NodeMut::AlterDatabaseSetStmt(l), NodeRef::AlterDatabaseSetStmt(r)) => l == r,
            (NodeMut::AlterRoleSetStmt(l), NodeRef::AlterRoleSetStmt(r)) => l == r,
            (NodeMut::CreateConversionStmt(l), NodeRef::CreateConversionStmt(r)) => l == r,
            (NodeMut::CreateCastStmt(l), NodeRef::CreateCastStmt(r)) => l == r,
            (NodeMut::CreateOpClassStmt(l), NodeRef::CreateOpClassStmt(r)) => l == r,
            (NodeMut::CreateOpFamilyStmt(l), NodeRef::CreateOpFamilyStmt(r)) => l == r,
            (NodeMut::AlterOpFamilyStmt(l), NodeRef::AlterOpFamilyStmt(r)) => l == r,
            (NodeMut::PrepareStmt(l), NodeRef::PrepareStmt(r)) => l == r,
            (NodeMut::ExecuteStmt(l), NodeRef::ExecuteStmt(r)) => l == r,
            (NodeMut::DeallocateStmt(l), NodeRef::DeallocateStmt(r)) => l == r,
            (NodeMut::DeclareCursorStmt(l), NodeRef::DeclareCursorStmt(r)) => l == r,
            (NodeMut::CreateTableSpaceStmt(l), NodeRef::CreateTableSpaceStmt(r)) => l == r,
            (NodeMut::DropTableSpaceStmt(l), NodeRef::DropTableSpaceStmt(r)) => l == r,
            (NodeMut::AlterObjectDependsStmt(l), NodeRef::AlterObjectDependsStmt(r)) => l == r,
            (NodeMut::AlterObjectSchemaStmt(l), NodeRef::AlterObjectSchemaStmt(r)) => l == r,
            (NodeMut::AlterOwnerStmt(l), NodeRef::AlterOwnerStmt(r)) => l == r,
            (NodeMut::AlterOperatorStmt(l), NodeRef::AlterOperatorStmt(r)) => l == r,
            (NodeMut::AlterTypeStmt(l), NodeRef::AlterTypeStmt(r)) => l == r,
            (NodeMut::DropOwnedStmt(l), NodeRef::DropOwnedStmt(r)) => l == r,
            (NodeMut::ReassignOwnedStmt(l), NodeRef::ReassignOwnedStmt(r)) => l == r,
            (NodeMut::CompositeTypeStmt(l), NodeRef::CompositeTypeStmt(r)) => l == r,
            (NodeMut::CreateEnumStmt(l), NodeRef::CreateEnumStmt(r)) => l == r,
            (NodeMut::CreateRangeStmt(l), NodeRef::CreateRangeStmt(r)) => l == r,
            (NodeMut::AlterEnumStmt(l), NodeRef::AlterEnumStmt(r)) => l == r,
            (NodeMut::AlterTsdictionaryStmt(l), NodeRef::AlterTsdictionaryStmt(r)) => l == r,
            (NodeMut::AlterTsconfigurationStmt(l), NodeRef::AlterTsconfigurationStmt(r)) => l == r,
            (NodeMut::CreateFdwStmt(l), NodeRef::CreateFdwStmt(r)) => l == r,
            (NodeMut::AlterFdwStmt(l), NodeRef::AlterFdwStmt(r)) => l == r,
            (NodeMut::CreateForeignServerStmt(l), NodeRef::CreateForeignServerStmt(r)) => l == r,
            (NodeMut::AlterForeignServerStmt(l), NodeRef::AlterForeignServerStmt(r)) => l == r,
            (NodeMut::CreateUserMappingStmt(l), NodeRef::CreateUserMappingStmt(r)) => l == r,
            (NodeMut::AlterUserMappingStmt(l), NodeRef::AlterUserMappingStmt(r)) => l == r,
            (NodeMut::DropUserMappingStmt(l), NodeRef::DropUserMappingStmt(r)) => l == r,
            (NodeMut::AlterTableSpaceOptionsStmt(l), NodeRef::AlterTableSpaceOptionsStmt(r)) => l == r,
            (NodeMut::AlterTableMoveAllStmt(l), NodeRef::AlterTableMoveAllStmt(r)) => l == r,
            (NodeMut::SecLabelStmt(l), NodeRef::SecLabelStmt(r)) => l == r,
            (NodeMut::CreateForeignTableStmt(l), NodeRef::CreateForeignTableStmt(r)) => l == r,
            (NodeMut::ImportForeignSchemaStmt(l), NodeRef::ImportForeignSchemaStmt(r)) => l == r,
            (NodeMut::CreateExtensionStmt(l), NodeRef::CreateExtensionStmt(r)) => l == r,
            (NodeMut::AlterExtensionStmt(l), NodeRef::AlterExtensionStmt(r)) => l == r,
            (NodeMut::AlterExtensionContentsStmt(l), NodeRef::AlterExtensionContentsStmt(r)) => l == r,
            (NodeMut::CreateEventTrigStmt(l), NodeRef::CreateEventTrigStmt(r)) => l == r,
            (NodeMut::AlterEventTrigStmt(l), NodeRef::AlterEventTrigStmt(r)) => l == r,
            (NodeMut::RefreshMatViewStmt(l), NodeRef::RefreshMatViewStmt(r)) => l == r,
            (NodeMut::ReplicaIdentityStmt(l), NodeRef::ReplicaIdentityStmt(r)) => l == r,
            (NodeMut::AlterSystemStmt(l), NodeRef::AlterSystemStmt(r)) => l == r,
            (NodeMut::CreatePolicyStmt(l), NodeRef::CreatePolicyStmt(r)) => l == r,
            (NodeMut::AlterPolicyStmt(l), NodeRef::AlterPolicyStmt(r)) => l == r,
            (NodeMut::CreateTransformStmt(l), NodeRef::CreateTransformStmt(r)) => l == r,
            (NodeMut::CreateAmStmt(l), NodeRef::CreateAmStmt(r)) => l == r,
            (NodeMut::CreatePublicationStmt(l), NodeRef::CreatePublicationStmt(r)) => l == r,
            (NodeMut::AlterPublicationStmt(l), NodeRef::AlterPublicationStmt(r)) => l == r,
            (NodeMut::CreateSubscriptionStmt(l), NodeRef::CreateSubscriptionStmt(r)) => l == r,
            (NodeMut::AlterSubscriptionStmt(l), NodeRef::AlterSubscriptionStmt(r)) => l == r,
            (NodeMut::DropSubscriptionStmt(l), NodeRef::DropSubscriptionStmt(r)) => l == r,
            (NodeMut::CreateStatsStmt(l), NodeRef::CreateStatsStmt(r)) => l == r,
            (NodeMut::AlterCollationStmt(l), NodeRef::AlterCollationStmt(r)) => l == r,
            (NodeMut::CallStmt(l), NodeRef::CallStmt(r)) => l == r,
            (NodeMut::AlterStatsStmt(l), NodeRef::AlterStatsStmt(r)) => l == r,
            (NodeMut::AExpr(l), NodeRef::AExpr(r)) => l == r,
            (NodeMut::ColumnRef(l), NodeRef::ColumnRef(r)) => l == r,
            (NodeMut::ParamRef(l), NodeRef::ParamRef(r)) => l == r,
            (NodeMut::AConst(l), NodeRef::AConst(r)) => l == r,
            (NodeMut::FuncCall(l), NodeRef::FuncCall(r)) => l == r,
            (NodeMut::AStar(l), NodeRef::AStar(r)) => l == r,
            (NodeMut::AIndices(l), NodeRef::AIndices(r)) => l == r,
            (NodeMut::AIndirection(l), NodeRef::AIndirection(r)) => l == r,
            (NodeMut::AArrayExpr(l), NodeRef::AArrayExpr(r)) => l == r,
            (NodeMut::ResTarget(l), NodeRef::ResTarget(r)) => l == r,
            (NodeMut::MultiAssignRef(l), NodeRef::MultiAssignRef(r)) => l == r,
            (NodeMut::TypeCast(l), NodeRef::TypeCast(r)) => l == r,
            (NodeMut::CollateClause(l), NodeRef::CollateClause(r)) => l == r,
            (NodeMut::SortBy(l), NodeRef::SortBy(r)) => l == r,
            (NodeMut::WindowDef(l), NodeRef::WindowDef(r)) => l == r,
            (NodeMut::RangeSubselect(l), NodeRef::RangeSubselect(r)) => l == r,
            (NodeMut::RangeFunction(l), NodeRef::RangeFunction(r)) => l == r,
            (NodeMut::RangeTableSample(l), NodeRef::RangeTableSample(r)) => l == r,
            (NodeMut::RangeTableFunc(l), NodeRef::RangeTableFunc(r)) => l == r,
            (NodeMut::RangeTableFuncCol(l), NodeRef::RangeTableFuncCol(r)) => l == r,
            (NodeMut::TypeName(l), NodeRef::TypeName(r)) => l == r,
            (NodeMut::ColumnDef(l), NodeRef::ColumnDef(r)) => l == r,
            (NodeMut::IndexElem(l), NodeRef::IndexElem(r)) => l == r,
            (NodeMut::Constraint(l), NodeRef::Constraint(r)) => l == r,
            (NodeMut::DefElem(l), NodeRef::DefElem(r)) => l == r,
            (NodeMut::RangeTblEntry(l), NodeRef::RangeTblEntry(r)) => l == r,
            (NodeMut::RangeTblFunction(l), NodeRef::RangeTblFunction(r)) => l == r,
            (NodeMut::TableSampleClause(l), NodeRef::TableSampleClause(r)) => l == r,
            (NodeMut::WithCheckOption(l), NodeRef::WithCheckOption(r)) => l == r,
            (NodeMut::SortGroupClause(l), NodeRef::SortGroupClause(r)) => l == r,
            (NodeMut::GroupingSet(l), NodeRef::GroupingSet(r)) => l == r,
            (NodeMut::WindowClause(l), NodeRef::WindowClause(r)) => l == r,
            (NodeMut::ObjectWithArgs(l), NodeRef::ObjectWithArgs(r)) => l == r,
            (NodeMut::AccessPriv(l), NodeRef::AccessPriv(r)) => l == r,
            (NodeMut::CreateOpClassItem(l), NodeRef::CreateOpClassItem(r)) => l == r,
            (NodeMut::TableLikeClause(l), NodeRef::TableLikeClause(r)) => l == r,
            (NodeMut::FunctionParameter(l), NodeRef::FunctionParameter(r)) => l == r,
            (NodeMut::LockingClause(l), NodeRef::LockingClause(r)) => l == r,
            (NodeMut::RowMarkClause(l), NodeRef::RowMarkClause(r)) => l == r,
            (NodeMut::XmlSerialize(l), NodeRef::XmlSerialize(r)) => l == r,
            (NodeMut::WithClause(l), NodeRef::WithClause(r)) => l == r,
            (NodeMut::InferClause(l), NodeRef::InferClause(r)) => l == r,
            (NodeMut::OnConflictClause(l), NodeRef::OnConflictClause(r)) => l == r,
            (NodeMut::CommonTableExpr(l), NodeRef::CommonTableExpr(r)) => l == r,
            (NodeMut::RoleSpec(l), NodeRef::RoleSpec(r)) => l == r,
            (NodeMut::TriggerTransition(l), NodeRef::TriggerTransition(r)) => l == r,
            (NodeMut::PartitionElem(l), NodeRef::PartitionElem(r)) => l == r,
            (NodeMut::PartitionSpec(l), NodeRef::PartitionSpec(r)) => l == r,
            (NodeMut::PartitionBoundSpec(l), NodeRef::PartitionBoundSpec(r)) => l == r,
            (NodeMut::PartitionRangeDatum(l), NodeRef::PartitionRangeDatum(r)) => l == r,
            (NodeMut::PartitionCmd(l), NodeRef::PartitionCmd(r)) => l == r,
            (NodeMut::VacuumRelation(l), NodeRef::VacuumRelation(r)) => l == r,
            (NodeMut::InlineCodeBlock(l), NodeRef::InlineCodeBlock(r)) => l == r,
            (NodeMut::CallContext(l), NodeRef::CallContext(r)) => l == r,
            (NodeMut::Integer(l), NodeRef::Integer(r)) => l == r,
            (NodeMut::Float(l), NodeRef::Float(r)) => l == r,
            (NodeMut::String(l), NodeRef::String(r)) => l == r,
            (NodeMut::BitString(l), NodeRef::BitString(r)) => l == r,
            (NodeMut::Null(l), NodeRef::Null(r)) => l == r,
            (NodeMut::List(l), NodeRef::List(r)) => l == r,
            (NodeMut::IntList(l), NodeRef::IntList(r)) => l == r,
            (NodeMut::OidList(l), NodeRef::OidList(r)) => l == r,
            _ => false
        }
    }

    pub fn to_enum(&self) -> NodeEnum {
        match self {
            NodeMut::Alias(n) => NodeEnum::Alias((*n).clone()),
            NodeMut::RangeVar(n) => NodeEnum::RangeVar((*n).clone()),
            NodeMut::TableFunc(n) => NodeEnum::TableFunc(Box::new((*n).clone())),
            NodeMut::Expr(n) => NodeEnum::Expr((*n).clone()),
            NodeMut::Var(n) => NodeEnum::Var(Box::new((*n).clone())),
            NodeMut::Param(n) => NodeEnum::Param(Box::new((*n).clone())),
            NodeMut::Aggref(n) => NodeEnum::Aggref(Box::new((*n).clone())),
            NodeMut::GroupingFunc(n) => NodeEnum::GroupingFunc(Box::new((*n).clone())),
            NodeMut::WindowFunc(n) => NodeEnum::WindowFunc(Box::new((*n).clone())),
            NodeMut::SubscriptingRef(n) => NodeEnum::SubscriptingRef(Box::new((*n).clone())),
            NodeMut::FuncExpr(n) => NodeEnum::FuncExpr(Box::new((*n).clone())),
            NodeMut::NamedArgExpr(n) => NodeEnum::NamedArgExpr(Box::new((*n).clone())),
            NodeMut::OpExpr(n) => NodeEnum::OpExpr(Box::new((*n).clone())),
            NodeMut::DistinctExpr(n) => NodeEnum::DistinctExpr(Box::new((*n).clone())),
            NodeMut::NullIfExpr(n) => NodeEnum::NullIfExpr(Box::new((*n).clone())),
            NodeMut::ScalarArrayOpExpr(n) => NodeEnum::ScalarArrayOpExpr(Box::new((*n).clone())),
            NodeMut::BoolExpr(n) => NodeEnum::BoolExpr(Box::new((*n).clone())),
            NodeMut::SubLink(n) => NodeEnum::SubLink(Box::new((*n).clone())),
            NodeMut::SubPlan(n) => NodeEnum::SubPlan(Box::new((*n).clone())),
            NodeMut::AlternativeSubPlan(n) => NodeEnum::AlternativeSubPlan(Box::new((*n).clone())),
            NodeMut::FieldSelect(n) => NodeEnum::FieldSelect(Box::new((*n).clone())),
            NodeMut::FieldStore(n) => NodeEnum::FieldStore(Box::new((*n).clone())),
            NodeMut::RelabelType(n) => NodeEnum::RelabelType(Box::new((*n).clone())),
            NodeMut::CoerceViaIo(n) => NodeEnum::CoerceViaIo(Box::new((*n).clone())),
            NodeMut::ArrayCoerceExpr(n) => NodeEnum::ArrayCoerceExpr(Box::new((*n).clone())),
            NodeMut::ConvertRowtypeExpr(n) => NodeEnum::ConvertRowtypeExpr(Box::new((*n).clone())),
            NodeMut::CollateExpr(n) => NodeEnum::CollateExpr(Box::new((*n).clone())),
            NodeMut::CaseExpr(n) => NodeEnum::CaseExpr(Box::new((*n).clone())),
            NodeMut::CaseWhen(n) => NodeEnum::CaseWhen(Box::new((*n).clone())),
            NodeMut::CaseTestExpr(n) => NodeEnum::CaseTestExpr(Box::new((*n).clone())),
            NodeMut::ArrayExpr(n) => NodeEnum::ArrayExpr(Box::new((*n).clone())),
            NodeMut::RowExpr(n) => NodeEnum::RowExpr(Box::new((*n).clone())),
            NodeMut::RowCompareExpr(n) => NodeEnum::RowCompareExpr(Box::new((*n).clone())),
            NodeMut::CoalesceExpr(n) => NodeEnum::CoalesceExpr(Box::new((*n).clone())),
            NodeMut::MinMaxExpr(n) => NodeEnum::MinMaxExpr(Box::new((*n).clone())),
            NodeMut::SqlvalueFunction(n) => NodeEnum::SqlvalueFunction(Box::new((*n).clone())),
            NodeMut::XmlExpr(n) => NodeEnum::XmlExpr(Box::new((*n).clone())),
            NodeMut::NullTest(n) => NodeEnum::NullTest(Box::new((*n).clone())),
            NodeMut::BooleanTest(n) => NodeEnum::BooleanTest(Box::new((*n).clone())),
            NodeMut::CoerceToDomain(n) => NodeEnum::CoerceToDomain(Box::new((*n).clone())),
            NodeMut::CoerceToDomainValue(n) => NodeEnum::CoerceToDomainValue(Box::new((*n).clone())),
            NodeMut::SetToDefault(n) => NodeEnum::SetToDefault(Box::new((*n).clone())),
            NodeMut::CurrentOfExpr(n) => NodeEnum::CurrentOfExpr(Box::new((*n).clone())),
            NodeMut::NextValueExpr(n) => NodeEnum::NextValueExpr(Box::new((*n).clone())),
            NodeMut::InferenceElem(n) => NodeEnum::InferenceElem(Box::new((*n).clone())),
            NodeMut::TargetEntry(n) => NodeEnum::TargetEntry(Box::new((*n).clone())),
            NodeMut::RangeTblRef(n) => NodeEnum::RangeTblRef((*n).clone()),
            NodeMut::JoinExpr(n) => NodeEnum::JoinExpr(Box::new((*n).clone())),
            NodeMut::FromExpr(n) => NodeEnum::FromExpr(Box::new((*n).clone())),
            NodeMut::OnConflictExpr(n) => NodeEnum::OnConflictExpr(Box::new((*n).clone())),
            NodeMut::IntoClause(n) => NodeEnum::IntoClause(Box::new((*n).clone())),
            NodeMut::RawStmt(n) => NodeEnum::RawStmt(Box::new((*n).clone())),
            NodeMut::Query(n) => NodeEnum::Query(Box::new((*n).clone())),
            NodeMut::InsertStmt(n) => NodeEnum::InsertStmt(Box::new((*n).clone())),
            NodeMut::DeleteStmt(n) => NodeEnum::DeleteStmt(Box::new((*n).clone())),
            NodeMut::UpdateStmt(n) => NodeEnum::UpdateStmt(Box::new((*n).clone())),
            NodeMut::SelectStmt(n) => NodeEnum::SelectStmt(Box::new((*n).clone())),
            NodeMut::AlterTableStmt(n) => NodeEnum::AlterTableStmt((*n).clone()),
            NodeMut::AlterTableCmd(n) => NodeEnum::AlterTableCmd(Box::new((*n).clone())),
            NodeMut::AlterDomainStmt(n) => NodeEnum::AlterDomainStmt(Box::new((*n).clone())),
            NodeMut::SetOperationStmt(n) => NodeEnum::SetOperationStmt(Box::new((*n).clone())),
            NodeMut::GrantStmt(n) => NodeEnum::GrantStmt((*n).clone()),
            NodeMut::GrantRoleStmt(n) => NodeEnum::GrantRoleStmt((*n).clone()),
            NodeMut::AlterDefaultPrivilegesStmt(n) => NodeEnum::AlterDefaultPrivilegesStmt((*n).clone()),
            NodeMut::ClosePortalStmt(n) => NodeEnum::ClosePortalStmt((*n).clone()),
            NodeMut::ClusterStmt(n) => NodeEnum::ClusterStmt((*n).clone()),
            NodeMut::CopyStmt(n) => NodeEnum::CopyStmt(Box::new((*n).clone())),
            NodeMut::CreateStmt(n) => NodeEnum::CreateStmt((*n).clone()),
            NodeMut::DefineStmt(n) => NodeEnum::DefineStmt((*n).clone()),
            NodeMut::DropStmt(n) => NodeEnum::DropStmt((*n).clone()),
            NodeMut::TruncateStmt(n) => NodeEnum::TruncateStmt((*n).clone()),
            NodeMut::CommentStmt(n) => NodeEnum::CommentStmt(Box::new((*n).clone())),
            NodeMut::FetchStmt(n) => NodeEnum::FetchStmt((*n).clone()),
            NodeMut::IndexStmt(n) => NodeEnum::IndexStmt(Box::new((*n).clone())),
            NodeMut::CreateFunctionStmt(n) => NodeEnum::CreateFunctionStmt((*n).clone()),
            NodeMut::AlterFunctionStmt(n) => NodeEnum::AlterFunctionStmt((*n).clone()),
            NodeMut::DoStmt(n) => NodeEnum::DoStmt((*n).clone()),
            NodeMut::RenameStmt(n) => NodeEnum::RenameStmt(Box::new((*n).clone())),
            NodeMut::RuleStmt(n) => NodeEnum::RuleStmt(Box::new((*n).clone())),
            NodeMut::NotifyStmt(n) => NodeEnum::NotifyStmt((*n).clone()),
            NodeMut::ListenStmt(n) => NodeEnum::ListenStmt((*n).clone()),
            NodeMut::UnlistenStmt(n) => NodeEnum::UnlistenStmt((*n).clone()),
            NodeMut::TransactionStmt(n) => NodeEnum::TransactionStmt((*n).clone()),
            NodeMut::ViewStmt(n) => NodeEnum::ViewStmt(Box::new((*n).clone())),
            NodeMut::LoadStmt(n) => NodeEnum::LoadStmt((*n).clone()),
            NodeMut::CreateDomainStmt(n) => NodeEnum::CreateDomainStmt(Box::new((*n).clone())),
            NodeMut::CreatedbStmt(n) => NodeEnum::CreatedbStmt((*n).clone()),
            NodeMut::DropdbStmt(n) => NodeEnum::DropdbStmt((*n).clone()),
            NodeMut::VacuumStmt(n) => NodeEnum::VacuumStmt((*n).clone()),
            NodeMut::ExplainStmt(n) => NodeEnum::ExplainStmt(Box::new((*n).clone())),
            NodeMut::CreateTableAsStmt(n) => NodeEnum::CreateTableAsStmt(Box::new((*n).clone())),
            NodeMut::CreateSeqStmt(n) => NodeEnum::CreateSeqStmt((*n).clone()),
            NodeMut::AlterSeqStmt(n) => NodeEnum::AlterSeqStmt((*n).clone()),
            NodeMut::VariableSetStmt(n) => NodeEnum::VariableSetStmt((*n).clone()),
            NodeMut::VariableShowStmt(n) => NodeEnum::VariableShowStmt((*n).clone()),
            NodeMut::DiscardStmt(n) => NodeEnum::DiscardStmt((*n).clone()),
            NodeMut::CreateTrigStmt(n) => NodeEnum::CreateTrigStmt(Box::new((*n).clone())),
            NodeMut::CreatePlangStmt(n) => NodeEnum::CreatePlangStmt((*n).clone()),
            NodeMut::CreateRoleStmt(n) => NodeEnum::CreateRoleStmt((*n).clone()),
            NodeMut::AlterRoleStmt(n) => NodeEnum::AlterRoleStmt((*n).clone()),
            NodeMut::DropRoleStmt(n) => NodeEnum::DropRoleStmt((*n).clone()),
            NodeMut::LockStmt(n) => NodeEnum::LockStmt((*n).clone()),
            NodeMut::ConstraintsSetStmt(n) => NodeEnum::ConstraintsSetStmt((*n).clone()),
            NodeMut::ReindexStmt(n) => NodeEnum::ReindexStmt((*n).clone()),
            NodeMut::CheckPointStmt(n) => NodeEnum::CheckPointStmt((*n).clone()),
            NodeMut::CreateSchemaStmt(n) => NodeEnum::CreateSchemaStmt((*n).clone()),
            NodeMut::AlterDatabaseStmt(n) => NodeEnum::AlterDatabaseStmt((*n).clone()),
            NodeMut::AlterDatabaseSetStmt(n) => NodeEnum::AlterDatabaseSetStmt((*n).clone()),
            NodeMut::AlterRoleSetStmt(n) => NodeEnum::AlterRoleSetStmt((*n).clone()),
            NodeMut::CreateConversionStmt(n) => NodeEnum::CreateConversionStmt((*n).clone()),
            NodeMut::CreateCastStmt(n) => NodeEnum::CreateCastStmt((*n).clone()),
            NodeMut::CreateOpClassStmt(n) => NodeEnum::CreateOpClassStmt((*n).clone()),
            NodeMut::CreateOpFamilyStmt(n) => NodeEnum::CreateOpFamilyStmt((*n).clone()),
            NodeMut::AlterOpFamilyStmt(n) => NodeEnum::AlterOpFamilyStmt((*n).clone()),
            NodeMut::PrepareStmt(n) => NodeEnum::PrepareStmt(Box::new((*n).clone())),
            NodeMut::ExecuteStmt(n) => NodeEnum::ExecuteStmt((*n).clone()),
            NodeMut::DeallocateStmt(n) => NodeEnum::DeallocateStmt((*n).clone()),
            NodeMut::DeclareCursorStmt(n) => NodeEnum::DeclareCursorStmt(Box::new((*n).clone())),
            NodeMut::CreateTableSpaceStmt(n) => NodeEnum::CreateTableSpaceStmt((*n).clone()),
            NodeMut::DropTableSpaceStmt(n) => NodeEnum::DropTableSpaceStmt((*n).clone()),
            NodeMut::AlterObjectDependsStmt(n) => NodeEnum::AlterObjectDependsStmt(Box::new((*n).clone())),
            NodeMut::AlterObjectSchemaStmt(n) => NodeEnum::AlterObjectSchemaStmt(Box::new((*n).clone())),
            NodeMut::AlterOwnerStmt(n) => NodeEnum::AlterOwnerStmt(Box::new((*n).clone())),
            NodeMut::AlterOperatorStmt(n) => NodeEnum::AlterOperatorStmt((*n).clone()),
            NodeMut::AlterTypeStmt(n) => NodeEnum::AlterTypeStmt((*n).clone()),
            NodeMut::DropOwnedStmt(n) => NodeEnum::DropOwnedStmt((*n).clone()),
            NodeMut::ReassignOwnedStmt(n) => NodeEnum::ReassignOwnedStmt((*n).clone()),
            NodeMut::CompositeTypeStmt(n) => NodeEnum::CompositeTypeStmt((*n).clone()),
            NodeMut::CreateEnumStmt(n) => NodeEnum::CreateEnumStmt((*n).clone()),
            NodeMut::CreateRangeStmt(n) => NodeEnum::CreateRangeStmt((*n).clone()),
            NodeMut::AlterEnumStmt(n) => NodeEnum::AlterEnumStmt((*n).clone()),
            NodeMut::AlterTsdictionaryStmt(n) => NodeEnum::AlterTsdictionaryStmt((*n).clone()),
            NodeMut::AlterTsconfigurationStmt(n) => NodeEnum::AlterTsconfigurationStmt((*n).clone()),
            NodeMut::CreateFdwStmt(n) => NodeEnum::CreateFdwStmt((*n).clone()),
            NodeMut::AlterFdwStmt(n) => NodeEnum::AlterFdwStmt((*n).clone()),
            NodeMut::CreateForeignServerStmt(n) => NodeEnum::CreateForeignServerStmt((*n).clone()),
            NodeMut::AlterForeignServerStmt(n) => NodeEnum::AlterForeignServerStmt((*n).clone()),
            NodeMut::CreateUserMappingStmt(n) => NodeEnum::CreateUserMappingStmt((*n).clone()),
            NodeMut::AlterUserMappingStmt(n) => NodeEnum::AlterUserMappingStmt((*n).clone()),
            NodeMut::DropUserMappingStmt(n) => NodeEnum::DropUserMappingStmt((*n).clone()),
            NodeMut::AlterTableSpaceOptionsStmt(n) => NodeEnum::AlterTableSpaceOptionsStmt((*n).clone()),
            NodeMut::AlterTableMoveAllStmt(n) => NodeEnum::AlterTableMoveAllStmt((*n).clone()),
            NodeMut::SecLabelStmt(n) => NodeEnum::SecLabelStmt(Box::new((*n).clone())),
            NodeMut::CreateForeignTableStmt(n) => NodeEnum::CreateForeignTableStmt((*n).clone()),
            NodeMut::ImportForeignSchemaStmt(n) => NodeEnum::ImportForeignSchemaStmt((*n).clone()),
            NodeMut::CreateExtensionStmt(n) => NodeEnum::CreateExtensionStmt((*n).clone()),
            NodeMut::AlterExtensionStmt(n) => NodeEnum::AlterExtensionStmt((*n).clone()),
            NodeMut::AlterExtensionContentsStmt(n) => NodeEnum::AlterExtensionContentsStmt(Box::new((*n).clone())),
            NodeMut::CreateEventTrigStmt(n) => NodeEnum::CreateEventTrigStmt((*n).clone()),
            NodeMut::AlterEventTrigStmt(n) => NodeEnum::AlterEventTrigStmt((*n).clone()),
            NodeMut::RefreshMatViewStmt(n) => NodeEnum::RefreshMatViewStmt((*n).clone()),
            NodeMut::ReplicaIdentityStmt(n) => NodeEnum::ReplicaIdentityStmt((*n).clone()),
            NodeMut::AlterSystemStmt(n) => NodeEnum::AlterSystemStmt((*n).clone()),
            NodeMut::CreatePolicyStmt(n) => NodeEnum::CreatePolicyStmt(Box::new((*n).clone())),
            NodeMut::AlterPolicyStmt(n) => NodeEnum::AlterPolicyStmt(Box::new((*n).clone())),
            NodeMut::CreateTransformStmt(n) => NodeEnum::CreateTransformStmt((*n).clone()),
            NodeMut::CreateAmStmt(n) => NodeEnum::CreateAmStmt((*n).clone()),
            NodeMut::CreatePublicationStmt(n) => NodeEnum::CreatePublicationStmt((*n).clone()),
            NodeMut::AlterPublicationStmt(n) => NodeEnum::AlterPublicationStmt((*n).clone()),
            NodeMut::CreateSubscriptionStmt(n) => NodeEnum::CreateSubscriptionStmt((*n).clone()),
            NodeMut::AlterSubscriptionStmt(n) => NodeEnum::AlterSubscriptionStmt((*n).clone()),
            NodeMut::DropSubscriptionStmt(n) => NodeEnum::DropSubscriptionStmt((*n).clone()),
            NodeMut::CreateStatsStmt(n) => NodeEnum::CreateStatsStmt((*n).clone()),
            NodeMut::AlterCollationStmt(n) => NodeEnum::AlterCollationStmt((*n).clone()),
            NodeMut::CallStmt(n) => NodeEnum::CallStmt(Box::new((*n).clone())),
            NodeMut::AlterStatsStmt(n) => NodeEnum::AlterStatsStmt((*n).clone()),
            NodeMut::AExpr(n) => NodeEnum::AExpr(Box::new((*n).clone())),
            NodeMut::ColumnRef(n) => NodeEnum::ColumnRef((*n).clone()),
            NodeMut::ParamRef(n) => NodeEnum::ParamRef((*n).clone()),
            NodeMut::AConst(n) => NodeEnum::AConst(Box::new((*n).clone())),
            NodeMut::FuncCall(n) => NodeEnum::FuncCall(Box::new((*n).clone())),
            NodeMut::AStar(n) => NodeEnum::AStar((*n).clone()),
            NodeMut::AIndices(n) => NodeEnum::AIndices(Box::new((*n).clone())),
            NodeMut::AIndirection(n) => NodeEnum::AIndirection(Box::new((*n).clone())),
            NodeMut::AArrayExpr(n) => NodeEnum::AArrayExpr((*n).clone()),
            NodeMut::ResTarget(n) => NodeEnum::ResTarget(Box::new((*n).clone())),
            NodeMut::MultiAssignRef(n) => NodeEnum::MultiAssignRef(Box::new((*n).clone())),
            NodeMut::TypeCast(n) => NodeEnum::TypeCast(Box::new((*n).clone())),
            NodeMut::CollateClause(n) => NodeEnum::CollateClause(Box::new((*n).clone())),
            NodeMut::SortBy(n) => NodeEnum::SortBy(Box::new((*n).clone())),
            NodeMut::WindowDef(n) => NodeEnum::WindowDef(Box::new((*n).clone())),
            NodeMut::RangeSubselect(n) => NodeEnum::RangeSubselect(Box::new((*n).clone())),
            NodeMut::RangeFunction(n) => NodeEnum::RangeFunction((*n).clone()),
            NodeMut::RangeTableSample(n) => NodeEnum::RangeTableSample(Box::new((*n).clone())),
            NodeMut::RangeTableFunc(n) => NodeEnum::RangeTableFunc(Box::new((*n).clone())),
            NodeMut::RangeTableFuncCol(n) => NodeEnum::RangeTableFuncCol(Box::new((*n).clone())),
            NodeMut::TypeName(n) => NodeEnum::TypeName((*n).clone()),
            NodeMut::ColumnDef(n) => NodeEnum::ColumnDef(Box::new((*n).clone())),
            NodeMut::IndexElem(n) => NodeEnum::IndexElem(Box::new((*n).clone())),
            NodeMut::Constraint(n) => NodeEnum::Constraint(Box::new((*n).clone())),
            NodeMut::DefElem(n) => NodeEnum::DefElem(Box::new((*n).clone())),
            NodeMut::RangeTblEntry(n) => NodeEnum::RangeTblEntry(Box::new((*n).clone())),
            NodeMut::RangeTblFunction(n) => NodeEnum::RangeTblFunction(Box::new((*n).clone())),
            NodeMut::TableSampleClause(n) => NodeEnum::TableSampleClause(Box::new((*n).clone())),
            NodeMut::WithCheckOption(n) => NodeEnum::WithCheckOption(Box::new((*n).clone())),
            NodeMut::SortGroupClause(n) => NodeEnum::SortGroupClause((*n).clone()),
            NodeMut::GroupingSet(n) => NodeEnum::GroupingSet((*n).clone()),
            NodeMut::WindowClause(n) => NodeEnum::WindowClause(Box::new((*n).clone())),
            NodeMut::ObjectWithArgs(n) => NodeEnum::ObjectWithArgs((*n).clone()),
            NodeMut::AccessPriv(n) => NodeEnum::AccessPriv((*n).clone()),
            NodeMut::CreateOpClassItem(n) => NodeEnum::CreateOpClassItem((*n).clone()),
            NodeMut::TableLikeClause(n) => NodeEnum::TableLikeClause((*n).clone()),
            NodeMut::FunctionParameter(n) => NodeEnum::FunctionParameter(Box::new((*n).clone())),
            NodeMut::LockingClause(n) => NodeEnum::LockingClause((*n).clone()),
            NodeMut::RowMarkClause(n) => NodeEnum::RowMarkClause((*n).clone()),
            NodeMut::XmlSerialize(n) => NodeEnum::XmlSerialize(Box::new((*n).clone())),
            NodeMut::WithClause(n) => NodeEnum::WithClause((*n).clone()),
            NodeMut::InferClause(n) => NodeEnum::InferClause(Box::new((*n).clone())),
            NodeMut::OnConflictClause(n) => NodeEnum::OnConflictClause(Box::new((*n).clone())),
            NodeMut::CommonTableExpr(n) => NodeEnum::CommonTableExpr(Box::new((*n).clone())),
            NodeMut::RoleSpec(n) => NodeEnum::RoleSpec((*n).clone()),
            NodeMut::TriggerTransition(n) => NodeEnum::TriggerTransition((*n).clone()),
            NodeMut::PartitionElem(n) => NodeEnum::PartitionElem(Box::new((*n).clone())),
            NodeMut::PartitionSpec(n) => NodeEnum::PartitionSpec((*n).clone()),
            NodeMut::PartitionBoundSpec(n) => NodeEnum::PartitionBoundSpec((*n).clone()),
            NodeMut::PartitionRangeDatum(n) => NodeEnum::PartitionRangeDatum(Box::new((*n).clone())),
            NodeMut::PartitionCmd(n) => NodeEnum::PartitionCmd((*n).clone()),
            NodeMut::VacuumRelation(n) => NodeEnum::VacuumRelation((*n).clone()),
            NodeMut::InlineCodeBlock(n) => NodeEnum::InlineCodeBlock((*n).clone()),
            NodeMut::CallContext(n) => NodeEnum::CallContext((*n).clone()),
            NodeMut::Integer(n) => NodeEnum::Integer((*n).clone()),
            NodeMut::Float(n) => NodeEnum::Float((*n).clone()),
            NodeMut::String(n) => NodeEnum::String((*n).clone()),
            NodeMut::BitString(n) => NodeEnum::BitString((*n).clone()),
            NodeMut::Null(n) => NodeEnum::Null((*n).clone()),
            NodeMut::List(n) => NodeEnum::List((*n).clone()),
            NodeMut::IntList(n) => NodeEnum::IntList((*n).clone()),
            NodeMut::OidList(n) => NodeEnum::OidList((*n).clone()),
        }
    }
}
